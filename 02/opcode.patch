Index: Python/ceval.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Python/ceval.c	(revision 8d21aa21f2cbc6d50aab3f420bb23be1d081dac4)
+++ Python/ceval.c	(date 1592136896684)
@@ -2552,6 +2552,24 @@
             break;
         }
 
+        TARGET(LOAD_OTUS)
+        {
+            x = GETLOCAL(0);
+            if (x != NULL) {
+                Py_INCREF(x);
+                PUSH(x);
+
+                w = GETITEM(consts, oparg);
+                Py_INCREF(w);
+                PUSH(w);
+                FAST_DISPATCH();
+            }
+            format_exc_check_arg(PyExc_UnboundLocalError,
+                UNBOUNDLOCAL_ERROR_MSG,
+                PyTuple_GetItem(co->co_varnames, 0));
+            break;
+        }
+
         TARGET(LOAD_ATTR)
         {
             w = GETITEM(names, oparg);
Index: Lib/opcode.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Lib/opcode.py	(revision 8d21aa21f2cbc6d50aab3f420bb23be1d081dac4)
+++ Lib/opcode.py	(date 1592136685432)
@@ -188,5 +188,8 @@
 EXTENDED_ARG = 145
 def_op('SET_ADD', 146)
 def_op('MAP_ADD', 147)
+def_op('LOAD_OTUS', 148)
+hasconst.append(148)
+haslocal.append(148)
 
 del def_op, name_op, jrel_op, jabs_op
Index: Python/peephole.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Python/peephole.c	(revision 8d21aa21f2cbc6d50aab3f420bb23be1d081dac4)
+++ Python/peephole.c	(date 1592136835491)
@@ -389,6 +389,15 @@
                 codestr[i+3] = NOP;
                 break;
 
+            case LOAD_FAST:
+                j = GETARG(codestr, i);
+                if (codestr[i+3] != LOAD_CONST || j != 0)
+                    continue;
+
+                memset(codestr+i, NOP, 3);
+                codestr[i+3] = LOAD_OTUS;
+                break;
+
                 /* Replace LOAD_GLOBAL/LOAD_NAME None
                    with LOAD_CONST None */
             case LOAD_NAME:
Index: Include/opcode.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Include/opcode.h	(revision 8d21aa21f2cbc6d50aab3f420bb23be1d081dac4)
+++ Include/opcode.h	(date 1592136685432)
@@ -158,7 +158,7 @@
 
 #define SET_ADD         146
 #define MAP_ADD         147
-
+#define LOAD_OTUS       148
 
 enum cmp_op {PyCmp_LT=Py_LT, PyCmp_LE=Py_LE, PyCmp_EQ=Py_EQ, PyCmp_NE=Py_NE, PyCmp_GT=Py_GT, PyCmp_GE=Py_GE,
 	     PyCmp_IN, PyCmp_NOT_IN, PyCmp_IS, PyCmp_IS_NOT, PyCmp_EXC_MATCH, PyCmp_BAD};
Index: Python/opcode_targets.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Python/opcode_targets.h	(revision 8d21aa21f2cbc6d50aab3f420bb23be1d081dac4)
+++ Python/opcode_targets.h	(date 1592136685432)
@@ -147,7 +147,7 @@
     &&TARGET_EXTENDED_ARG,
     &&TARGET_SET_ADD,
     &&TARGET_MAP_ADD,
-    &&_unknown_opcode,
+    &&TARGET_LOAD_OTUS,
     &&_unknown_opcode,
     &&_unknown_opcode,
     &&_unknown_opcode,
